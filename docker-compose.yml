version: '3.8'

services:
  # MySQL Database
  mysql:
    image: mysql:8.0
    container_name: st_andrews_mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD:-StAndrews@2024}
      MYSQL_DATABASE: ${DB_NAME:-st_andrews_sms}
      MYSQL_USER: ${DB_USER:-sms_user}
      MYSQL_PASSWORD: ${DB_PASSWORD:-sms_password}
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./database/init:/docker-entrypoint-initdb.d
      - ./database/backups:/backups
    networks:
      - sms_network
    command: --default-authentication-plugin=mysql_native_password

  # phpMyAdmin for database management
  phpmyadmin:
    image: phpmyadmin/phpmyadmin:latest
    container_name: st_andrews_phpmyadmin
    restart: unless-stopped
    environment:
      PMA_HOST: mysql
      PMA_PORT: 3306
      PMA_USER: ${DB_USER:-sms_user}
      PMA_PASSWORD: ${DB_PASSWORD:-sms_password}
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD:-StAndrews@2024}
    ports:
      - "8080:80"
    depends_on:
      - mysql
    networks:
      - sms_network

  # Redis for session storage and caching
  redis:
    image: redis:7-alpine
    container_name: st_andrews_redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - sms_network
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD:-redis_password}

  # SMS Server (Node.js Backend)
  sms-server:
    build:
      context: ./sms-server
      dockerfile: Dockerfile
    container_name: st_andrews_server
    restart: unless-stopped
    environment:
      NODE_ENV: ${NODE_ENV:-production}
      PORT: ${PORT:-5000}
      DB_HOST: mysql
      DB_USER: ${DB_USER:-sms_user}
      DB_PASSWORD: ${DB_PASSWORD:-sms_password}
      DB_NAME: ${DB_NAME:-st_andrews_sms}
      JWT_SECRET: ${JWT_SECRET:-st_andrews_jwt_secret_key_2024}
      REDIS_HOST: redis
      REDIS_PASSWORD: ${REDIS_PASSWORD:-redis_password}
    ports:
      - "5000:5000"
    volumes:
      - ./sms-server:/app
      - /app/node_modules
      - uploads:/app/uploads
    depends_on:
      - mysql
      - redis
    networks:
      - sms_network
    command: npm start

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: st_andrews_nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/sites-available:/etc/nginx/conf.d
      - ./client:/usr/share/nginx/html
      - ./ssl:/etc/nginx/ssl
    depends_on:
      - sms-server
    networks:
      - sms_network

  # File Storage Service (MinIO)
  minio:
    image: minio/minio:latest
    container_name: st_andrews_minio
    restart: unless-stopped
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER:-minioadmin}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD:-minioadmin123}
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio_data:/data
    networks:
      - sms_network
    command: server /data --console-address ":9001"

  # Backup Service
  backup:
    image: mysql:8.0
    container_name: st_andrews_backup
    restart: "no"
    environment:
      MYSQL_HOST: mysql
      MYSQL_USER: ${DB_USER:-sms_user}
      MYSQL_PASSWORD: ${DB_PASSWORD:-sms_password}
      MYSQL_DATABASE: ${DB_NAME:-st_andrews_sms}
    volumes:
      - ./database/backups:/backups
      - ./scripts/backup.sh:/backup.sh
    depends_on:
      - mysql
    networks:
      - sms_network
    entrypoint: ["/bin/bash", "/backup.sh"]

  # Development tools (only for development)
  mailhog:
    image: mailhog/mailhog:latest
    container_name: st_andrews_mailhog
    restart: unless-stopped
    ports:
      - "1025:1025"  # SMTP server
      - "8025:8025"  # Web UI
    networks:
      - sms_network
    profiles:
      - development

# Volumes
volumes:
  mysql_data:
    driver: local
  redis_data:
    driver: local
  minio_data:
    driver: local
  uploads:
    driver: local

# Networks
networks:
  sms_network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16